{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tuanh\\\\React Js\\\\project_covid\\\\src\\\\components\\\\ShowData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from '../redux/actions/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowData = () => {\n  _s();\n\n  // get data\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]); // update data everytime\n\n  useEffect(() => {\n    setInterval(function () {\n      dispatch(getData());\n    }, 1000);\n  }, []);\n  const {\n    data\n  } = useSelector(state => state.posts);\n  let dataSort = {};\n\n  if (data != null) {\n    // sort data\n    dataSort = data.sort((val1, val2) => val2.cases - val1.cases); // get index of VN\n\n    let indexVN = dataSort.findIndex(data => data.country === 'Vietnam'); // get element VN\n\n    let reindexVN = dataSort.splice(indexVN, 1); // reindex of VN\n\n    dataSort.unshift(reindexVN[0]); // arr has 10 element\n\n    dataSort.length = 10; // total\n\n    data.map(val => {\n      totalCases += val.cases;\n      totalDeaths += val.deaths;\n      totalRecovered += val.recovered;\n    });\n  } else {\n    console.log('Loading');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"thead-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"STT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Qu\\u1ED1c Gia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"S\\u1ED1 ca m\\u0103c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"T\\u1EED vong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"B\\xECnh ph\\u1EE5c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(dataSort).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\\"Loandingg\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 54\n      }, this) : dataSort.map((val, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: val.countryInfo.flag,\n            width: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: val.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowData, \"ZFNhPK84Q468fOiFNOYkxqXo5A4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ShowData;\nexport default ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"sources":["E:/Tuanh/React Js/project_covid/src/components/ShowData.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getData","ShowData","dispatch","setInterval","data","state","posts","dataSort","sort","val1","val2","cases","indexVN","findIndex","country","reindexVN","splice","unshift","length","map","val","totalCases","totalDeaths","deaths","totalRecovered","recovered","console","log","Object","keys","index","countryInfo","flag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT,CAHmB,CAOnB;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAAC,YAAU;AACpBD,MAAAA,QAAQ,CAACF,OAAO,EAAR,CAAR;AACD,KAFU,EAER,IAFQ,CAAX;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM;AAACI,IAAAA;AAAD,MAASN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA1B;AAEA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIH,IAAI,IAAI,IAAZ,EAAkB;AACd;AACAG,IAAAA,QAAQ,GAAGH,IAAI,CAACI,IAAL,CAAU,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAACC,KAAL,GAAWF,IAAI,CAACE,KAA1C,CAAX,CAFc,CAGd;;AACA,QAAIC,OAAO,GAAGL,QAAQ,CAACM,SAAT,CAAmBT,IAAI,IAAIA,IAAI,CAACU,OAAL,KAAiB,SAA5C,CAAd,CAJc,CAKd;;AACA,QAAIC,SAAS,GAAGR,QAAQ,CAACS,MAAT,CAAgBJ,OAAhB,EAAyB,CAAzB,CAAhB,CANc,CAOd;;AACAL,IAAAA,QAAQ,CAACU,OAAT,CAAiBF,SAAS,CAAC,CAAD,CAA1B,EARc,CASd;;AACAR,IAAAA,QAAQ,CAACW,MAAT,GAAkB,EAAlB,CAVc,CAWd;;AACAd,IAAAA,IAAI,CAACe,GAAL,CAASC,GAAG,IAAI;AACZC,MAAAA,UAAU,IAAED,GAAG,CAACT,KAAhB;AACAW,MAAAA,WAAW,IAAEF,GAAG,CAACG,MAAjB;AACAC,MAAAA,cAAc,IAAEJ,GAAG,CAACK,SAApB;AACH,KAJD;AAKH,GAjBD,MAiBO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAED,sBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA,gBAEIC,MAAM,CAACC,IAAP,CAAYtB,QAAZ,EAAsBW,MAAtB,KAAiC,CAAjC,gBAAqC;AAAA,+BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAArC,GAAqEX,QAAQ,CAACY,GAAT,CAAa,CAACC,GAAD,EAAMU,KAAN,kBAClF;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACA;AAAK,YAAA,GAAG,EAAEV,GAAG,CAACW,WAAJ,CAAgBC,IAA1B;AAAgC,YAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAOZ,GAAG,CAACN;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAA,oBAAKM,GAAG,CAACT;AAAT;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,oBAAKS,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,oBAAKH,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA,SAASK,KAAT;AAAA;AAAA;AAAA;AAAA,cADqE;AAFzE;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAnED;;GAAM7B,Q;UAEeF,W,EAYFD,W;;;KAdbG,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData } from '../redux/actions/fetchData';\r\n\r\nconst ShowData = () => {\r\n    // get data\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch(getData());\r\n    }, [dispatch]);\r\n\r\n    // update data everytime\r\n    useEffect(() => {\r\n        setInterval(function(){\r\n          dispatch(getData());\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const {data} = useSelector((state) => state.posts);\r\n\r\n    let dataSort = {};\r\n    if (data != null) {\r\n        // sort data\r\n        dataSort = data.sort((val1, val2) => val2.cases-val1.cases);\r\n        // get index of VN\r\n        let indexVN = dataSort.findIndex(data => data.country === 'Vietnam');\r\n        // get element VN\r\n        let reindexVN = dataSort.splice(indexVN, 1);\r\n        // reindex of VN\r\n        dataSort.unshift(reindexVN[0]);\r\n        // arr has 10 element\r\n        dataSort.length = 10;\r\n        // total\r\n        data.map(val => {\r\n            totalCases+=val.cases;\r\n            totalDeaths+=val.deaths;\r\n            totalRecovered+=val.recovered;\r\n        })\r\n    } else {\r\n        console.log('Loading');\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-dark\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">STT</th>\r\n                    <th scope=\"col\">Quốc Gia</th>\r\n                    <th scope=\"col\">Số ca măc</th>\r\n                    <th scope=\"col\">Tử vong</th>\r\n                    <th scope=\"col\">Bình phục</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                Object.keys(dataSort).length === 0 ? <tr><td>\"Loandingg\"</td></tr> : dataSort.map((val, index) => ( \r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index}</th>\r\n                    <td>\r\n                    <img src={val.countryInfo.flag} width=\"30\"/>  \r\n                    <span>{val.country}</span>\r\n                    </td>\r\n                    <td>{val.cases}</td>\r\n                    <td>{val.deaths}</td>\r\n                    <td>{val.recovered}</td>\r\n                </tr>\r\n                ))\r\n            }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ShowData;"]},"metadata":{},"sourceType":"module"}